@import url(https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Inter:ital,opsz,wght@0,14..32,500;1,14..32,500&display=swap);
@import 'tailwindcss';

 /* BASE */
 /* If you want to add your own default base styles for specific HTML elements,
  * use the @layer directive to add those styles to Tailwind's base layer:
  */
 @layer base {
  body {
    @apply bg-light-background
           dark:bg-dark-background
           text-light-primary
           dark:text-dark-primary;
  }

  a,
  img,
  button {
    @apply block;
  }

  input {
    @apply block
    outline-none
    bg-transparent
    w-full;
  }

  input[type='password'] {
    @apply tracking-[5px];
  }

  input[type='password']::placeholder {
    @apply tracking-normal;
  }


  ::-webkit-scrollbar {
    @apply w-2
    h-2
    rounded-full;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-transparent
    rounded-full;
  }

  // 語法	意義	範例
  // :	pseudo-class	:hover, :focus
  // ::	pseudo-element	::before, ::after, ::placeholder
  *:hover::-webkit-scrollbar-thumb {
    @apply bg-amber-50;
           dark:bg-bg-amber-50;
  }
}

/* Theme */
/* Theme variables aren't just CSS variables — they also instruct Tailwind to create new utility
   classes that you can use in your HTML. */
@theme {
  --font-display: 'DM Sans', sans-serif;
  --color-light-background: #ECF2EE;
  --color-dark-background: #0E1513;

  --color-light-primary: #0D1A16;
  --color-light-secondary: #4B635C;
  --color-light-accent: #096B5A;
  --color-light-onSurface:#F5FBF7;
  --color-light-onSurfaceVariant:#DBE5E0;

  --color-dark-primary: #DEE4E0;
  --color-dark-secondary: #A1F2DC;
  --color-dark-accent: #85D6C1;
  --color-dark-onSurface:#0E1513;
  --color-dark-onSurfaceVariant: #3F4945;

  --color-dark-outline: #89938F;
  --color-light-outline: #6F7975;
}

.text-displaySmall {
  @apply text-[36px] leading-[44px] tracking-[0px] font-normal
}

.text-bodyLarge {
  @apply text-[16px] leading-[24px] tracking-[0.5px] font-normal;
}

/* Component */
/* Use the components layer for any more complicated
   classes you want to add to your project that you'd still like to be able to override with utility classes. */
@layer components {
  .text-field-wrapper {
    @apply relative;
  }
  .text-field {
    @apply ring-1 ring-inset ring-light-outline dark:ring-dark-outline bg-inherit
          text-light-onSurface dark:text-dark-onSurface caret-light-primary;
  }
}
